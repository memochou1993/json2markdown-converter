@use "sass:map";
@use 'variables' as *;

:root {
  --primary-color: #{$primary-color};
  --primary-soft-color: #{$primary-soft-color};
  --text-color: #{$text-color};
  --background-color: #{$background-color};
  --background-accent-color: #{$background-accent-color};
  --border-color: #{$border-color};
  --border-radius: #{$border-radius};
  --border-style: #{$border-style};
  --header-height: #{$header-height};
  --toolbar-height: #{$toolbar-height};
}

html {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background-color: var(--background-color);
  box-sizing: border-box;
  color-scheme: light dark;
  color: var(--text-color);
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  font-synthesis: none;
  font-weight: 400;
  line-height: 1.5;
  text-rendering: optimizeLegibility;
}

* {
  &, &::before, &::after {
    box-sizing: inherit;
  }
}

body {
  font-size: 1rem;
  margin: 0;
}

header {
  align-items: center;
  background-color: var(--background-color);
  border-bottom: var(--border-style);
  display: flex;
  font-weight: 700;
  height: var(--header-height);
  justify-content: space-between;
  padding: 0 1.5rem;
  h1 {
    font-size: 1.5rem;
  }
  svg {
    height: 1.5rem;
    width: 1.5rem;
  }
}

button,
select {
  background-color: var(--background-color);
  border-radius: var(--border-radius);
  color: var(--text-color);
  cursor: pointer;
  height: 2rem;
  padding: 0 0.25rem;
}

a {
  color: var(--primary-color);
  text-decoration: none;
  &:hover {
    text-decoration: underline;
  }
}

svg {
  height: 1rem;
  width: 1rem;
}

.container {
  margin: 0 auto;
  @each $key, $value in $breakpoints {
    @media (min-width: $value) {
      max-width: map.get($container-max-width, $key);
    }
  }
}

.d-flex {
  display: flex;
}

.align-items-center {
  align-items: center;
}

.flex-column {
  flex-direction: column;
}

.toolbar {
  align-items: center;
  border-bottom: var(--border-style);
  display: flex;
  height: 60px;
  justify-content: space-between;
  padding: 0 1.5rem;
}

.button-group {
  border: var(--border-style);
  border-radius: var(--border-radius);
  display: flex;
  align-items: center;
  padding: 0.25rem;
  label {
    align-items: center;
    background-color: transparent;
    border-radius: var(--border-radius);
    border: none;
    display: flex;
    height: calc(2rem - 0.25rem * 2 - 2px);
    justify-content: center;
    padding: 0 0.5rem;
    transition: background-color 0.25s ease, transform 0.15s ease;
    cursor: pointer;
    &:not(:last-child) {
      margin-right: 2px;
    }
    @at-root input:checked + label,
    &:hover {
      background-color: var(--background-accent-color);
    }
    &:active {
      transform: scale(0.95);
    }
  }
}

.cm-editor {
  background-color: var(--background-color);
  border: none;
  &.cm-focused {
    .cm-cursor {
      border-left-color: var(--primary-color);
    }
  }
  .cm-activeLine {
    background-color: var(--primary-soft-color);
  }
  .cm-activeLineGutter {
    background-color: var(--primary-soft-color);
  }
  .cm-foldGutter {
    span {
      color: var(--primary-color);
    }
  }
  .cm-foldPlaceholder {
    color: var(--text-color);
    border-radius: var(--border-radius);
    background-color: var(--primary-color)
  }
  .cm-gutters {
    background-color: var(--background-accent-color);
    border-right: var(--border-style);
    color: var(--text-color);
  }
  .cm-selectionBackground {
    background-color: var(--primary-soft-color) !important;
  }
  .cm-tooltip-lint {
    background-color: var(--background-accent-color);
  }
}

.pane {
  padding-bottom: 2rem;
  overflow: auto;
  height: calc(100dvh - var(--header-height) - var(--toolbar-height));
}

.pane-left {
  max-width: 80%;
  min-width: 20%;
  width: 50%;
}

.pane-right {
  flex: 1;
}

.splitter {
  background-color: var(--border-color);
  cursor: col-resize;
  user-select: none;
  width: 2px;
  &:hover,
  &.active {
    background-color: var(--primary-color);
  }
}

.markdown {
  padding-left: 2rem;
  padding-right: 2rem;
  table {
    border-collapse: separate;
    border-radius: var(--border-radius);
    border-spacing: 0;
    margin: 1rem 0;
    width: 100%;
    tr {
      transition: background-color 0.25s ease;
      &:hover {
        background-color: var(--background-accent-color);
      }
      th, td {
        border-right: var(--border-style);
        max-width: 120px;
        padding: 0.5rem 1rem;
      }
      th {
        background-color: var(--background-color);
      }
      td {
        border-bottom: var(--border-style);
        word-break: break-word;
        &:has(pre) {
          padding: 0;
          width: 50%;
          pre {
            border: 0;
            height: 200px;
            margin: 0;
            max-height: none;
            min-height: 200px;
            padding: 0;
            resize: vertical;
            code {
              height: 100%;
            }
          }
        }
      }
      th:first-child, td:first-child {
        border-left: var(--border-style);
      }
      &:first-child {
        th, td {
          border-top: var(--border-style);
        }
        th:first-child {
          border-top-left-radius: var(--border-radius);
        }
        th:last-child {
          border-top-right-radius: var(--border-radius);
        }
      }
      &:last-child {
        td:first-child {
          border-bottom-left-radius: var(--border-radius);
        }
        td:last-child {
          border-bottom-right-radius: var(--border-radius);
        }
      }
    }
  }
  @for $i from 1 through 6 {
    h#{$i} {
      font-size: 2rem - 0.25rem * ($i - 1);
      margin-bottom: 1rem;
      margin-top: 1rem;
    }
  }
  h1 {
    border-bottom: var(--border-style);
    padding-bottom: 0.25rem;
  }
  ol, ul {
    padding-inline-start: 2rem;
    li {
      margin-bottom: 0.5rem;
      margin-top: 0.5rem;
    }
  }
  p {
    a {
      display: inline-block;
      svg {
        margin-left: 0.25rem;
      }
    }
    code {
      background-color: var(--background-accent-color);
      border-radius: var(--border-radius);
      padding: 0.25rem;
      word-break: break-all;
    }
  }
  pre {
    border-radius: var(--border-radius);
    border: var(--border-style);
    margin: 1rem 0;
    max-height: 50dvh;
    overflow: auto;
    padding: 0.5rem 1rem;
    code {
      background-color: inherit;
    }
  }
  img {
    width: 60px;
    border-radius: var(--border-radius);
  }
  .anchor {
    align-items: center;
    color: var(--text-color);
    display: flex;
    margin-left: -1.25rem;
    text-decoration: none;
    width: fit-content;
    svg {
      margin-right: 0.25rem;
      visibility: hidden;
      @at-root .anchor:hover svg {
        visibility: visible;
      }
    }
  }
  .table-of-contents {
    $font-size: 0.875rem;
    background-color: var(--background-accent-color);
    border-radius: var(--border-radius);
    border: var(--border-style);
    font-size: $font-size;
    max-height: 50dvh;
    max-width: 200px;
    overflow: auto;
    padding: 1rem;
    position: fixed;
    top: calc(var(--header-height) + var(--toolbar-height) + 2rem);
    @each $key, $value in $breakpoints {
      @media (min-width: $value) {
        $container-width: map.get($container-max-width, $key);
        @if $container-width != null {
          right: calc((100dvw + $container-width) / 2);
          width: calc((100dvw - $container-width) / 2 - 1rem * 2);
        }
      }
    }
    @media screen and (max-width: map.get($container-max-width, lg)) {
      display: none;
    }
    ul {
      margin: 0;
      padding-inline-start: $font-size;
    }
    > ul {
      padding-inline-start: 0;
    }
    li {
      margin: 0;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      a {
        color: var(--text-color);
      }
      &.active > a,
      a:hover {
        color: var(--primary-color);
      }
      :not(.expanded, .active) > ul {
        display: none;
      }
    }
  }
}
